I would like to implement web multiplayer support. To do this I would like to:
-First, set up some basics GUI flows to distinguish between local ('pass and play') mode and online multiplayer
-Second, set up some GUI flows to distinguish between the host and client role when commencing an online multiplayer game
-Third, establish the backend requirements to allow for the multiplayer mode
-Fourth, ensure that the hosting and joining processes are working
-Fifth, arrange the rest of the game play logic so that it works well in online multiplayer mode
I have outlined these in more detail below.

First, set up some basics GUI flows to distinguish between local ('pass and play') mode and online multiplayer
Before the current main menu there should be two options:
-Pass and play [Which will lead to the current version of the game]
-Play online [Which will lead to a new multiplayer version]

The multiplayer version should then have two options:
-Host a game
-Join a game



-Second, set up some GUI flows to distinguish between the host and client role when commencing an online multiplayer game
If the user hosts a game they should be given a code that they can share to others, if they choose to join a game they will be prompted to enter a code. 

The client should never be presented with the game settings and the host should be in control of the settings and starting the game.

From the client's perspective they should choose join existing game, be asked to enter a team name and a game id, and then click join and be joined to the game.

From the hosts perspective they should be presented with the game settings and a selection for their own team name (but no other team names). Once they submit that they should then see a screen that says 'Teams' which will include the host's team first, and then a list of all other teams as they join. There should be no more than 4 teams allowed. The host should be able to kick a team out of the game at this point. 


Once they start the game the game should start for everyone.



-Third, establish the backend requirements to allow for the multiplayer mode
I will need your advice on the best way of doing this.
I want the host to have a unique code that they can give the other players
The other players should be able to enter this code to join a game
The host should then be able to start the game, once the game starts no one else should bea ble to join.



-Fourth, ensure that the hosting and joining processes are working
We will test that a client can join.


-Fifth, arrange the rest of the game play logic so that it works well in online multiplayer mode
Each user (both the host and clients) should have a different view of the app.
Before a round only the team that is about to play should be able to select to start the round.
During the game play aspect only the current team should be shown the words they are guessing and only the current team should have access to the next and skip buttons.